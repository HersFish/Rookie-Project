#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma warning(disable:4996)
int year, month, day;
int run[12] = { 31,29,31,30,31,30,31,31,30,31,30,31 };
int ping[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
char weekday[7][10] = { "星期一","星期二","星期三","星期四","星期五","星期六","星期日" };
int LeapYear(int a)//case1闰年判断函数
{
    return (a % 4 == 0 && a % 100 != 0 || a % 400 == 0);//闰年输出1，平年输出0
}
void printStar()//输出星号函数
{
    printf("******************************************************\r\n");
}
void printbegin()//输出日历开头星期函数
{
    printf("日历                                         %d年%d月\r\n", year, month);
    for (int w = 0; w < 7; w++)
    {
        printf("%s\t", weekday[w]);
    }
    printf("\r\n");
}
int daySum(int year, int month, int day, int run[], int ping[])//计算year距离1900年1月1日有多少天的函数
{
    //参照1900年1月1日 星期一
    int i, sum = 0;
    for (i = 1900; i < year; i++)//计算年份天数
    {
        if (LeapYear(i) == 1)
            sum += 366;
        else
            sum += 365;
    }
    for (i = 0; i < month - 1; i++)//计算月份天数
    {
        if (LeapYear(year) == 1)
            sum += run[i];
        else
            sum += ping[i];
    }
    return sum;
}
void printData(int sum, int year, int month)//打印日历函数
{
    //result代表1号前预留空格数，temp代表1号开始位置
    int result, temp, i;
    result = sum % 7;            
    for (i = 0; i < result; i++)
    {
        printf("\t");
    }
    temp = 7 - result;
    if (LeapYear(year) == 1)
    {
        //数组下标是从0开始
      //月份都是从1号开始的
        for (i = 1; i <= run[month - 1]; i++)
        {
            printf("%d\t", i);
            //换行处理
            if (i == temp || (i - temp) % 7 == 0)
                printf("\n");
        }
        printf("\n");
    }
    else
    {
        //数组下标是从0开始
  //月份都是从1号开始的
        for (i = 1; i <= ping[month - 1]; i++)
        {
            printf("%d\t", i);
            //换行处理
            if (i == temp || (i - temp) % 7 == 0)
                printf("\n");
        }
        printf("\n");
    }
}
void printcontinueornot()  //打印是否继续查询菜单
{
    printStar();
    printf("*                __________________                  *\r\n");
    printf("*               |请选择是否继续查询|                 *\r\n");
    printf("*                ￣￣￣￣￣￣￣￣￣                  *\r\n");
    printf("*               ——1.继续查询  ——                 *\r\n");
    printf("*               ——2.返回主菜单——                 *\r\n");
    printf("*                                                    *\r\n");
    printStar();
    printf("请输入对应的序号：");
}
int Check(int year, int month, int day)  //检查年月日是否合法函数
{
    if (year < 0 || month <= 0 || month > 12 || day <= 0 || day > 31)
        return 0;    //0是非法，1是合法的
    else
        if ((4 == month || 6 == month || 9 == month || 11 == month) && day > 30)
        {
            return 0;
        }
    if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0))
    {
        if (2 == month && (30 == day || 31 == day))return 0;
        else
            return 1;
    }
    else
    {
        if (2 == month && (29 == day || 30 == day || 31 == day))
            return 0;
        else
            return 1;
    }
}
void constellation(int year, int month, int day) //星座判断函数
{
    printf("%d年%d月%d日是", year,month, day);
    if ((month == 12 && day >= 21) || (month == 1 && day <= 19))
    {
        printf("摩羯座");
    }
    else if ((month == 1 && day >= 19) || (month == 2 && day <= 18))
    {
        printf("水瓶座");
    }
    else if ((month == 2 && day >= 19) || (month == 3 && day <= 20))
        printf("双鱼座");
    else if ((month == 3 && day >= 21) || (month == 4 && day <= 19))
        printf("白羊座");
    else if ((month == 4 && day >= 20) || (month == 5 && day <= 20))
        printf("金牛座");
    else if ((month == 5 && day >= 21) || (month == 6 && day <= 21))
        printf("双子座");
    else if ((month == 6 && day >= 22) || (month == 7 && day <= 22))
        printf("巨蟹座");
    else if ((month == 7 && day >= 23) || (month == 8 && day <= 22))
        printf("狮子座");
    else if ((month == 8 && day >= 23) || (month == 9 && day <= 22))
        printf("处女座");
    else if ((month == 9 && day >= 23) || (month == 10 && day <= 23))
        printf("天秤座");
    else if ((month == 10 && day >= 24) || (month == 11 && day <= 22))
        printf("天蝎座");
    else
        printf("射手座");
}


int main()
{
    {
        int i = 1, choise = 0;
        while (i == 1)  //主循环，返回菜单功能
        {
            printf("******************欢迎使用万年历*********************\r\n");
            printf("*                     ______                        *\r\n");
            printf("*                    |菜  单|                       *\r\n");
            printf("*                     ￣￣￣                        *\r\n");
            printf("*             ——1.平年闰年判断——                *\r\n");
            printf("*             ——2.星期查询    ——                *\r\n");
            printf("*             ——3.整年日历查询——                *\r\n");
            printf("*             ——4.当月日历查询——         	    *\r\n");
            printf("*             ——5.星座查询    ——         	    *\r\n");
            printf("*             ——6.退出        ——                *\r\n");
            printf("*                                                   *\r\n");
            printf("*****************************************************\r\n");
            printf("请输入对应的序号：");
            scanf("%d", &choise);
            switch (choise)  //switch语句进行功能选择
            {
            case 1:  //平年闰年判断
            {
                int a = 1;
                while (a == 1)  //第二层循环，继续查询功能
                {
                    system("CLS");
                    do //判断输入是否正确
                    {
                        printf("请输入要判断的年份(如2021):");
                        scanf("%d", &year);
                        if ( year <= 0)
                        {
                            system("CLS");
                            printf("输入年份超出范围，请重新输入\r\n");
                        }
                    } while (year <= 0);
                    if (LeapYear(year) == 1) //LeapYear函数判断闰年平年
                    {
                        printf("                  \r\n");
                        printf("%d年是闰年\n", year);
                        printf("                  \r\n");
                    }
                    else
                    {
                        printf("                  \r\n");
                        printf("%d年是平年\n", year);
                        printf("                  \r\n");
                    }
                    year = 0;
                    //功能输出完毕，执行是否继续功能
                    int c = 1;
                    while (c == 1)
                    {
                        printcontinueornot(); //打印菜单函数
                        int b;
                        scanf("%d", &b);
                        if (b == 1)
                            ++c;
                        else if (b == 2)
                        {
                            ++c;
                            ++a;
                            system("CLS");
                        }
                        else
                        {
                            system("CLS");
                            printf("!!!!!!!!!!请输入正确序号!!!!!!!!!!\n");
                            continue;
                        }

                    }
                }break;
            }
            case 2:  //星期查询
            {
                int a = 1, d;
                while (a == 1)
                {
                    system("CLS");
                    printf("请输入要查询的年月日(例2021.6.4)：");
                    scanf("%d.%d.%d", &year, &month, &day);
                    d = Check(year, month, day);  //Check函数判断输入是否正确
                    for (; d == 0||year < 1900;)
                    {
                        printf("您输入的年月日有误或超出查询范围(year>=1900)，请重新输入\r\n");
                        printf("请输入要查询的年月日(例2021.6.4)：");
                        scanf("%d.%d.%d", &year, &month, &day);
                        d = Check(year, month, day);
                    }
                    int sum = daySum(year, month, day, run, ping);  
                    sum += day - 1;
                    printf("\r\n");
                    printf("%d年%d月%d日是", year, month, day);
                    switch (sum % 7)  //用距离1900年1月1日的天数%7，根据余数结果判断为星期几
                    {
                    case 0:printf("星期一\r\n");
                        break;
                    case 1:printf("星期二\r\n");
                        break;
                    case 2:printf("星期三\r\n");
                        break;
                    case 3:printf("星期四\r\n");
                        break;
                    case 4:printf("星期五\r\n");
                        break;
                    case 5:printf("星期六\r\n");
                        break;
                    case 6:printf("星期日\r\n");
                        break;
                    default:printf("错误\r\n");
                        break;
                    }
                    printf("\r\n");
                    year = 0, month = 0, day = 0;
                    int c = 1;           //开始执行是否继续
                    while (c == 1)
                    {
                        printcontinueornot();
                        int b;
                        scanf("%d", &b);
                        if (b == 1)
                            ++c;
                        else if (b == 2)
                        {
                            ++c;
                            ++a;
                            system("CLS");

                        }
                        else
                        {
                            system("CLS");
                            printf("!!!!!!!!!!请输入正确序号!!!!!!!!!!\n");
                            continue;
                        }

                    }

                }break;
            }
            case 3:  //年历打印
            {
                int a = 1;
                while (a == 1)
                {
                    system("CLS");
                    do  //判断输入是否正确
                    {
                        printf("请输入要查询的年份(例如2021)：");
                        scanf("%d", &year);
                        if ( year < 1900)
                        {
                            system("CLS");
                            printf("输入的年月超出查询范围或不合法(1900<year<9999),请重新输入\r\n");
                        }
                    } while (year < 1900);
                    for (month = 1; month <= 12; month++)
                    {
                        printStar();
                        printbegin();
                        int sum = daySum(year, month, day, run, ping);
                        printData(sum, year, month);
                        printStar();
                        printf("\r\n");
                    }
                    year = 0, month = 0;
                    printf("                  \r\n");
                    int c = 1;   //开始执行是否继续
                    while (c == 1)
                    {
                        printcontinueornot();
                        int b;
                        scanf("%d", &b);
                        if (b == 1)
                            ++c;
                        else if (b == 2)
                        {
                            ++c;
                            ++a;
                            system("CLS");

                        }
                        else
                        {
                            system("CLS");
                            printf("!!!!!!!!!!请输入正确序号!!!!!!!!!!\n");
                            continue;
                        }

                    }
                }
                break;
            }
            case 4:  //月历打印
            {
                int a = 1;
                while (a == 1)
                {
                    system("CLS");
                    do  //判断输入是否正确
                    {
                        printf("请输入要查询的年月(例如2021.5)：");
                        scanf("%d.%d", &year, &month);
                        if ( year < 1900  || month < 1 || month>12)
                        {
                            system("CLS");
                            printf("输入的年月超出查询范围或不合法(1900<year<9999)(0<month<=12)请重新输入\r\n");                           
                        }
                    } while (year < 1900  || month < 1 || month>12);
                    printStar();
                    printbegin();
                    int sum = daySum(year, month, day, run, ping);
                    printData(sum, year, month);
                    printStar();
                    year = 0, month = 0;
                    printf("                  \r\n");
                    int c = 1;   //开始执行是否继续
                    while (c == 1)
                    {
                        printcontinueornot();
                        int b;
                        scanf("%d", &b);
                        if (b == 1)
                            ++c;
                        else if (b == 2)
                        {
                            ++c;
                            ++a;
                            system("CLS");

                        }
                        else
                        {
                            system("CLS");
                            printf("!!!!!!!!!!请输入正确序号!!!!!!!!!!\n");
                            continue;
                        }

                    }
                }
                break;
            }
            case 5:  //星座查询
              {
                int a = 1,d;
                while (a == 1)
                {
                    system("CLS");
                    printf("请输入要查询的年月日(例2021.6.4)：");
                    scanf("%d.%d.%d", &year, &month, &day);
                    d = Check(year, month, day);  //判断输入是否正确
                    for (; d == 0 || year < 1900;)
                    {
                        printf("您输入的年月日有误或超出查询范围(year>=1900)，请重新输入\r\n");
                        printf("请输入要查询的年月日(例2021.6.4)：");
                        scanf("%d.%d.%d", &year, &month, &day);
                        d = Check(year, month, day);
                    }
                    printf("                  \r\n");
                    constellation(year, month, day);  //执行星座判断函数
                    printf("                  \r\n");
                    year = 0, month = 0, day = 0;
                    int c = 1;  //开始执行是否继续
                    while (c == 1)
                    {
                        printcontinueornot();
                        int b;
                        scanf("%d", &b);
                        if (b == 1)
                            ++c;
                        else if (b == 2)
                        {
                            ++c;
                            ++a;
                            system("CLS");

                        }
                        else
                        {
                            system("CLS");
                            printf("!!!!!!!!!!请输入正确序号!!!!!!!!!!\n");
                            continue;
                        }

                    }

                }
                break;
              }
            case 6:  //退出
                i += 1;
                break;
            default: //输入内容有误
            {
                system("CLS");
                printf("输入序号有误，请重新输入");
                printf("                  \r\n");
                break;
            }
            }
        }
        system("CLS");
        system("PAUSE");
    }
    return 0;
}
